<button class="toggle-tile @_tileCSSClass" @onclick=@ToggleTileColor>@Letter</button>

@code {

	[Parameter]
	public int TileIndex { get; set; }

	[Parameter]
	public string? Letter { get; set; }

	[Parameter]
	public int RoundNumber { get; set; }

	[Parameter]
	public EventCallback<TileColorAlloy> UpdateTileColor { get; set; } 

	private int StoredRoundNumber;

	private TileColor _tileColor = TileColor.Grey;

	private string _tileCSSClass = "grey-tile";

	protected override void OnParametersSet()
	{
		// if this is the first render after a round change, reset the tiles to grey
		if (RoundNumber != StoredRoundNumber)
		{
			_tileColor = TileColor.Grey;
			_tileCSSClass = "grey-tile";
			StoredRoundNumber = RoundNumber;
			UpdateTileColor.InvokeAsync(new TileColorAlloy(TileIndex, _tileColor));
		}
	}

	private void ToggleTileColor()
	{
		switch (_tileColor)
		{
			case TileColor.Grey:
				_tileColor = TileColor.Yellow;
				_tileCSSClass = "yellow-tile";
				break;
			case TileColor.Yellow:
				_tileColor = TileColor.Green;
				_tileCSSClass = "green-tile";
				break;
			default:
				_tileColor = TileColor.Grey;
				_tileCSSClass = "grey-tile";
				break;
		}

		UpdateTileColor.InvokeAsync(new TileColorAlloy(TileIndex, _tileColor));
	}
}
